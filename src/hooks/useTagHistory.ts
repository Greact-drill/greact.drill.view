import { useState, useEffect } from 'react';
import type { TagHistoryList } from '../types/tag';

// –ê–¥—Ä–µ—Å API –¥–ª—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
const BASE_API_URL = import.meta.env.VITE_API_URL; 

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—É—Ç—å –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
const API_URL = `${BASE_API_URL}/history/details?edge=test`;

const REFRESH_INTERVAL = 3000; 

interface UseTagHistoryResult {
    tagHistoryData: TagHistoryList | null;
    loading: boolean;
    error: string | null;
}

/**
 * –•—É–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤ —Å API.
 * @param isRealTime –ï—Å–ª–∏ true, –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º.
 * @returns –û–±—ä–µ–∫—Ç —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏, —Å—Ç–∞—Ç—É—Å–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–∫–æ–π.
 */
export const useTagHistory = (isRealTime: boolean): UseTagHistoryResult => {
    const [tagHistoryData, setTagHistoryData] = useState<TagHistoryList | null>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        const fetchHistory = async () => {
            // –ü—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
            if (!isRealTime) {
                setLoading(true);
            }
            setError(null);
            
            try {
                const response = await fetch(API_URL);

                if (!response.ok) {
                    throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status} (${response.statusText})`);
                }

                const data: TagHistoryList = await response.json(); 
                
                const filteredData = data.filter(tag => tag.history && tag.history.length > 0);
                
                setTagHistoryData(filteredData);

            } catch (err) {
                if (err instanceof Error) {
                    setError(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ: ${err.message}`);
                } else {
                    setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö.');
                }
            } finally {
                setLoading(false);
            }
        };

        // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ isRealTime
        fetchHistory();
        
        let intervalId: number | undefined; 

        // üí° –õ–û–ì–ò–ö–ê –†–ï–ê–õ–¨–ù–û–ì–û –í–†–ï–ú–ï–ù–ò (POLLING)
        if (isRealTime) {
            // setInterval –≤ –±—Ä–∞—É–∑–µ—Ä–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ (number)
            intervalId = setInterval(fetchHistory, REFRESH_INTERVAL) as unknown as number; 
            // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: 'as unknown as number' –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è, 
            // –µ—Å–ª–∏ –≤–∞—à–∞ tsconfig.json –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–æ–≥–∏–µ —Ç–∏–ø—ã Window
            // –ï—Å–ª–∏ –±–µ–∑ 'as unknown as number' —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Å—Ç–∞–≤—å—Ç–µ –ø—Ä–æ—Å—Ç–æ: 
            // intervalId = setInterval(fetchHistory, REFRESH_INTERVAL);
        }

        // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏: –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ —Å–º–µ–Ω–µ —Ä–µ–∂–∏–º–∞
        return () => {
             if (intervalId) {
                 clearInterval(intervalId);
             }
        };
        
    }, [isRealTime]); // –•—É–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –º–µ–Ω—è–µ—Ç—Å—è isRealTime

    return { tagHistoryData, loading, error };
};